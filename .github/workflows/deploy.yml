name: CD Pipeline

on:
  push:
    branches:
      - "main" # Trigger only on push events to the main branch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # Cancels any previous run of the same workflow

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: echo "${{ vars.ENV_FILE_CONTENT }}" > ./Backend/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/athlead-backend:${{ github.sha }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/athlead-backend:latest

  deploy-db-script:
    runs-on: ubuntu-latest
    needs: docker-build
    if: ${{ contains(github.event.head_commit.modified, 'Backend/sql/table_create.sql') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy database script on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            echo "Deploying database changes..."
            scp -o StrictHostKeyChecking=no ./Backend/sql/table_create.sql ${{ vars.USER }}@${{ vars.HOST }}:/home/${{ vars.USER }}/athlead-backend/table_create.sql
            mysql -u root -p${{ vars.DB_PASSWORD }} < /home/${{ vars.USER }}/athlead-backend/table_create.sql

  start-service:
    runs-on: ubuntu-latest
    needs: [docker-build, deploy-db-script]
    steps:
      - name: Check if database script ran
        run: |
          if [[ "${{ needs.deploy-db-script.result }}" == "success" ]]; then
            echo "Database script updated. Proceeding to deploy backend..."
          else
            echo "No database script changes. Proceeding to deploy backend..."
          fi

      - name: Deploy backend on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            echo "Deploying backend service..."
            cd /home/${{ vars.USER }}/athlead-backend
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/athlead-backend:latest
            sudo docker stop athlead-backend || true
            sudo docker rm athlead-backend || true
            sudo docker run -d \
              --name athlead-backend \
              -p 8000:8000 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/athlead-backend:latest
